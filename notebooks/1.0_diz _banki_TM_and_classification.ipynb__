{"cells":[{"cell_type":"markdown","metadata":{"id":"jFi48j34xa4r"},"source":["# Домашнее задание классификация по тональност"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"h1dvK7H_qauH"},"outputs":[],"source":["import json\n","\n","import bz2\n","import regex\n","from tqdm import tqdm\n","from scipy import sparse\n","from sklearn.feature_extraction.text import TfidfVectorizer"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":21325,"status":"ok","timestamp":1692612957721,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"ndOR1apHSFn7","outputId":"100b288a-9d8e-4d6f-cc8f-5a96e8a5f269"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3809,"status":"ok","timestamp":1692612961527,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"_ZsoxOinqauK","outputId":"38ee9082-bad8-40f6-f56d-e3023deda0f6"},"outputs":[{"output_type":"stream","name":"stdout","text":["Populating the interactive namespace from numpy and matplotlib\n"]}],"source":["import pandas as pd\n","import numpy as np\n","import nltk\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","%matplotlib inline\n","%pylab inline"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":48887,"status":"ok","timestamp":1692425890088,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"UNHVsbPnqauL","outputId":"f131b5cf-e991-4e89-f29e-78cd8fda82e8","scrolled":true},"outputs":[{"name":"stderr","output_type":"stream","text":["201030it [00:55, 3613.68it/s]\n"]}],"source":["responses = []\n","with bz2.BZ2File('/content/drive/MyDrive/banki_responses.json.bz2', 'r') as thefile:\n","    for row in tqdm(thefile):\n","        resp = json.loads(row)\n","        if not resp['rating_not_checked'] and (len(resp['text'].split()) > 0):\n","            responses.append(resp)"]},{"cell_type":"markdown","metadata":{"id":"F0ixYxfSqauM"},"source":["\n","Посмотрим на пример отзыва:"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":24,"status":"ok","timestamp":1692425890089,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"Dd7m6GpMqauP","outputId":"d27ab659-af83-4938-d010-bdc6beb3c519"},"outputs":[{"data":{"text/plain":["{'city': 'г. Саратов',\n"," 'rating_not_checked': False,\n"," 'title': 'Карта ко вкладу',\n"," 'num_comments': 0,\n"," 'bank_license': 'лицензия № 880',\n"," 'author': 'ronnichka',\n"," 'bank_name': 'Югра',\n"," 'datetime': '2015-06-03 20:56:57',\n"," 'text': 'Здравствуйте! Хотела написать, что мне месяц не выдают карту ко вкладу, ссылаясь на \"нам же их из Самары везут\" (на секундочку 5 часов езды от нашего города). Но! Прочитала, что людям 3,5 месяцев не выдают карту, и поняла, что у меня все хорошо, пока что. И подарок мне дали, и кулер в отделении есть. Так что я, конечно, готова ждать. Правда хотелось бы не очень долго.',\n"," 'rating_grade': 3}"]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["responses[99]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1692612962450,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"_MafaqNlaRSK","outputId":"4bf0fd35-408f-40a3-bb21-c6e5966ad9c6"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":6}],"source":["nltk.download('stopwords')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7632,"status":"ok","timestamp":1692612970078,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"8LaEAiv6VbZC","outputId":"c1dde321-0502-4852-bdfe-93a8bde6d68d"},"outputs":[{"output_type":"stream","name":"stderr","text":["Installing mystem to /root/.local/bin/mystem from http://download.cdn.yandex.net/mystem/mystem-3.1-linux-64bit.tar.gz\n"]}],"source":["import re\n","from nltk.corpus import stopwords\n","from pymystem3 import Mystem\n","\n","regex = re.compile(\"[А-Яа-я]+\")\n","\n","def words_only(text, regex=regex):\n","  # Оставляет только слова в нижнем регистре\n","    try:\n","        return \" \".join(regex.findall(text)).lower()\n","    except:\n","        return \"\"\n","\n","mystopwords = stopwords.words('russian') + ['это', 'наш' , 'тыс', 'млн', 'млрд', 'также', 'т', 'д', 'г']\n","def remove_stopwords(text, mystopwords=mystopwords):\n","  # Удаляет стопслова\n","    try:\n","        return \" \".join([token for token in text.split() if not token in mystopwords])\n","    except:\n","        return \"\"\n","\n","m = Mystem()\n","\n","def lemmatize(text, mystem=m):\n","    try:\n","        return \"\".join(m.lemmatize(text)).strip()\n","    except:\n","        return \" \"\n","\n","def pre_process(text):\n","  text = lemmatize(remove_stopwords(words_only(text)))\n","  return text"]},{"cell_type":"markdown","metadata":{"id":"nQ-RzEt1-xli"},"source":["## Часть 1. Анализ текстов"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":361,"status":"ok","timestamp":1692425895688,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"Scqbj18X_WKb","outputId":"55e91687-d9f2-444d-c9e1-b2ac717e4ee2"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-b79253e8-0d40-479e-ba5d-e601c3bc522b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>city</th>\n","      <th>rating_not_checked</th>\n","      <th>title</th>\n","      <th>num_comments</th>\n","      <th>bank_license</th>\n","      <th>author</th>\n","      <th>bank_name</th>\n","      <th>datetime</th>\n","      <th>text</th>\n","      <th>rating_grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>г. Москва</td>\n","      <td>False</td>\n","      <td>Жалоба</td>\n","      <td>0</td>\n","      <td>лицензия № 2562</td>\n","      <td>uhnov1</td>\n","      <td>Бинбанк</td>\n","      <td>2015-06-08 12:50:54</td>\n","      <td>Добрый день! Я не являюсь клиентом банка и пор...</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>г. Новосибирск</td>\n","      <td>False</td>\n","      <td>Не могу пользоваться услугой Сбербанк он-лайн</td>\n","      <td>0</td>\n","      <td>лицензия № 1481</td>\n","      <td>Foryou</td>\n","      <td>Сбербанк России</td>\n","      <td>2015-06-08 11:09:57</td>\n","      <td>Доброго дня! Являюсь держателем зарплатной кар...</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>г. Москва</td>\n","      <td>False</td>\n","      <td>Двойное списание за один товар.</td>\n","      <td>1</td>\n","      <td>лицензия № 2562</td>\n","      <td>Vladimir84</td>\n","      <td>Бинбанк</td>\n","      <td>2015-06-05 20:14:28</td>\n","      <td>Здравствуйте!  Дублирую свое заявление от 03.0...</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>г. Ставрополь</td>\n","      <td>False</td>\n","      <td>Меняют проценты комиссии  не предупредив и не ...</td>\n","      <td>2</td>\n","      <td>лицензия № 1481</td>\n","      <td>643609</td>\n","      <td>Сбербанк России</td>\n","      <td>2015-06-05 13:51:01</td>\n","      <td>Добрый день!! Я открыл расчетный счет в СберБа...</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>г. Челябинск</td>\n","      <td>False</td>\n","      <td>Верните денежные средства за страховку</td>\n","      <td>1</td>\n","      <td>лицензия № 2766</td>\n","      <td>anfisa-2003</td>\n","      <td>ОТП Банк</td>\n","      <td>2015-06-05 10:58:12</td>\n","      <td>04.03.2015 г. взяла кредит в вашем банке, заяв...</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b79253e8-0d40-479e-ba5d-e601c3bc522b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b79253e8-0d40-479e-ba5d-e601c3bc522b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b79253e8-0d40-479e-ba5d-e601c3bc522b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bd6f2a2a-fbde-405e-8f6c-8a0c581091f6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bd6f2a2a-fbde-405e-8f6c-8a0c581091f6')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bd6f2a2a-fbde-405e-8f6c-8a0c581091f6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"text/plain":["             city  rating_not_checked  \\\n","0       г. Москва               False   \n","1  г. Новосибирск               False   \n","2       г. Москва               False   \n","3   г. Ставрополь               False   \n","4    г. Челябинск               False   \n","\n","                                               title  num_comments  \\\n","0                                             Жалоба             0   \n","1      Не могу пользоваться услугой Сбербанк он-лайн             0   \n","2                    Двойное списание за один товар.             1   \n","3  Меняют проценты комиссии  не предупредив и не ...             2   \n","4             Верните денежные средства за страховку             1   \n","\n","      bank_license       author        bank_name             datetime  \\\n","0  лицензия № 2562       uhnov1          Бинбанк  2015-06-08 12:50:54   \n","1  лицензия № 1481       Foryou  Сбербанк России  2015-06-08 11:09:57   \n","2  лицензия № 2562   Vladimir84          Бинбанк  2015-06-05 20:14:28   \n","3  лицензия № 1481       643609  Сбербанк России  2015-06-05 13:51:01   \n","4  лицензия № 2766  anfisa-2003         ОТП Банк  2015-06-05 10:58:12   \n","\n","                                                text  rating_grade  \n","0  Добрый день! Я не являюсь клиентом банка и пор...           NaN  \n","1  Доброго дня! Являюсь держателем зарплатной кар...           NaN  \n","2  Здравствуйте!  Дублирую свое заявление от 03.0...           NaN  \n","3  Добрый день!! Я открыл расчетный счет в СберБа...           NaN  \n","4  04.03.2015 г. взяла кредит в вашем банке, заяв...           NaN  "]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["df = pd.DataFrame(responses)\n","df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PSYZuvDgXgS-"},"outputs":[],"source":["# df['cleared_text'] = df['text'].apply(pre_process)\n","# df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LVS4ufZIYT5E"},"outputs":[],"source":["# df.to_csv (r'/content/drive/MyDrive/my_data.csv', index= False )"]},{"cell_type":"markdown","metadata":{"id":"7-OCZT4FBZpW"},"source":["### Посчитайте количество отзывов в разных городах и на разные банки"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_RZ6T6qFa7ac"},"outputs":[],"source":["df.dropna (subset=['city'], inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1692425895693,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"9Uh-FC1mErF2","outputId":"c4176c74-5d01-4739-8058-49972e7ccb3d"},"outputs":[{"data":{"text/plain":["г. Москва                               55354\n","г. Санкт-Петербург                      14342\n","г. Екатеринбург                          2337\n","г. Новосибирск                           2300\n","г. Нижний Новгород                       1976\n","                                        ...  \n","г. г.Калуга                                 1\n","г. ВЕЛИКИЕ ЛУКИ                             1\n","г. всеволожск                               1\n","г. сейчас                                   1\n","г. Краснодарский край, ст.Павловская        1\n","Name: city, Length: 5823, dtype: int64"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["df['city'].value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0ZkymdCKFHIW"},"outputs":[],"source":["def clear_city (city):\n","  simbols_to_remove = ['г.', '(', ')']\n","  for i in simbols_to_remove:\n","    if city is not None:\n","      city = city.replace(i, '').lower()\n","  return city\n","\n","df['city'] = df['city'].apply(clear_city)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1692425895902,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"zwLcX6EZnftO","outputId":"4877140b-4e96-4725-9d9b-a745fb347016"},"outputs":[{"data":{"text/plain":[" москва                               56728\n"," санкт-петербург                      14650\n"," новосибирск                           2381\n"," екатеринбург                          2375\n"," нижний новгород                       2035\n","                                      ...  \n"," балахна, нижегородской области           1\n","  мытищи                                  1\n"," поселок горки-10                         1\n"," санкт-петербург - омск                   1\n"," краснодарский край, ст.павловская        1\n","Name: city, Length: 5100, dtype: int64"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["df['city'].value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":411,"status":"ok","timestamp":1692425896309,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"DPPKMvBqBbss","outputId":"ae5ce299-7ad9-4aa0-f11c-29d393735e17"},"outputs":[{"data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"]},"execution_count":15,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["from pandas.core.groupby import groupby\n","cities = df.groupby(['city']).count()['text'].sort_values(ascending=False).head()\n","plt.bar(cities.index[::], cities.values[::])\n","plt.xticks(rotation=45)\n","plt.xlabel('Топ 5')\n","plt.ylabel('Количество отзывов по городам')\n","plt.show"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":374,"status":"ok","timestamp":1692425896677,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"s57e_885MUoY","outputId":"cae9ba1b-ac74-48bf-9fc1-689318422c81"},"outputs":[{"data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"]},"execution_count":16,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["banks = df.groupby(['bank_name']).count()['text'].sort_values(ascending=False).head()\n","plt.barh(banks.index[::-1], banks.values[::-1])\n","plt.xlabel('Количество отзывов по банкам')\n","plt.ylabel('Топ 5')\n","plt.show"]},{"cell_type":"markdown","metadata":{"id":"6kgRrKcGQmb7"},"source":["### Постройте гистограмы длин слов в символах и в словах"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":401,"status":"ok","timestamp":1692425897073,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"EcbqlMo7QxKS","outputId":"71943553-5f31-4ade-b2f0-d9bcea4e4f08"},"outputs":[{"data":{"image/png":"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JCREEyZMqPBVVV3HuFSNsakc41I1xqZyjEvV6urY1MrLqAEAAI6nVp4DAwAAcDwEGAAAYB0CDAAAsA4BBgAAWIcAc5Jmzpyp5s2bKzQ0VMnJyVqzZk1Nd8mvJk2apK5du6phw4aKjY1Vv379tG3bNp+aQ4cOKTMzUzExMYqIiFD//v0r3Gxw586d6tu3rxo0aKDY2FiNHDlSR44c8an5+OOPdeGFFyokJEQtW7bUvHnzqvvw/Gby5MkKCAjQ8OHDnXV1eVx2796tm2++WTExMQoLC1OHDh20bt06p90Yo/Hjx6tJkyYKCwtTamqqtm/f7rONgoICpaenKzIyUlFRURo0aJAOHDjgU/Pll1/q4osvVmhoqBISEjRlypQzcnyno7S0VOPGjVNiYqLCwsLUokULPfbYYzr6eom6Mi6rVq3S1Vdfrfj4eAUEBOitt97yaT+T47BkyRK1bt1aoaGh6tChg95//32/H+/JOt64lJSUaPTo0erQoYPCw8MVHx+vW2+9VXv27PHZxtk4Lqfstz+56Oy3aNEiExwcbF555RWzefNmM3jwYBMVFWXy8/Nrumt+k5aWZubOnWs2bdpk8vLyTJ8+fUzTpk3NgQMHnJq77rrLJCQkmOzsbLNu3Tpz0UUXme7duzvtR44cMe3btzepqalmw4YN5v333zeNGzc2Y8eOdWq+/fZb06BBAzNixAizZcsW88ILL5h69eqZZcuWndHjPR1r1qwxzZs3NxdccIG57777nPV1dVwKCgpMs2bNzMCBA01ubq759ttvzYcffmi++eYbp2by5MnG5XKZt956y3zxxRfmmmuuMYmJieaXX35xaq688krTsWNH89lnn5l//etfpmXLluamm25y2ouKikxcXJxJT083mzZtMq+99poJCwszf/nLX87o8Z6sJ554wsTExJilS5eaHTt2mCVLlpiIiAjz/PPPOzV1ZVzef/9989BDD5k33njDSDJvvvmmT/uZGofVq1ebevXqmSlTppgtW7aYhx9+2NSvX99s3Lix2segMscbl8LCQpOammpef/1189VXX5mcnBzTrVs306VLF59tnI3jcqoIMCehW7duJjMz03ldWlpq4uPjzaRJk2qwV9Vr3759RpJZuXKlMebXP6r69eubJUuWODVbt241kkxOTo4x5tc/ysDAQOPxeJyaWbNmmcjISFNcXGyM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8WLz+9//3gQHB5t27dqZ9957r9qO+0SONy47duyo8t/jFStWONs4G8flVAUYc9TtIQEAACzAOTAAAMA6BBgAAGAdAgwAALAOAQYAAFiHAAMAAKxDgAEAANYhwAAAAOsQYAAAgHUIMAAAwDoEGAAAYB0CDHAaCgsLFRAQUGGJioqq6a4BQJ1AgAF+g3/84x/au3ev9u7dq2nTptV0dwCgziDAAKfhyJEjkqSYmBi53W653W65XK5KawcOHFhhpmb48OFOe0BAgN566y3n9csvv1yhpnnz5hUC0sCBA9WvXz/n9WWXXebzHkl65JFH1KlTJ+f12rVr9cc//lGNGzeWy+XSpZdeqs8///y4x1pWVqaJEyfqvPPOU0hIiDp16qRly5b59L+q5eOPP9bXX3+tjh07KiIiQhEREerZs6fWrFlz3H6XGz58uC677DKf2vJth4WFVejL6Rzf0T+f4OBgtW7dWq+++upx3/PDDz/opptuUnR0tMLDw5WUlKTc3FxJFcf88OHDatmypQICAlRYWChJmjdvngICAnTNNdf4bPf5559XQECABg4c6Kxr3ry507/w8HB1795d69atc9qLi4t17733KjY2VqGhoerZs6fWrl1boc9Hb6d8Kf+9Ky0t1aBBg5SYmKiwsDCdf/75ev755533Hjp0SO3atdOQIUOcdf/+97/VsGFDvfLKK8cdK6C6EGCA01BcXCxJCgkJOWGtMUZXXnmlM1OTkpJSZe3Bgwc1btw4RURE+K2vR9u/f78yMjL0ySef6LPPPlOrVq3Up08f7d+/v8r3PP/883rmmWc0depUffnll0pLS9M111yj7du3S5JzXHv37pXkOyvVvXt3uVwuTZ48WXl5eVq/fr1atGihAQMGnPYxDB48WHv37tWmTZvUvn17ZWRk/Kbjk+T8fLZv366rr75at912mw4cOFBp7YEDB3TppZdq9+7deuedd/TFF19o1KhRKisrq7R+xowZys/Pr7C+QYMGysnJ0e7du511c+bM0bnnnluhduLEidq7d6/WrVun8PBwZWZmOm2jRo3SP/7xD82fP1+ff/65WrZsqbS0NBUUFPhswxjjbKf8Z1WurKxM5513npYsWaItW7Zo/Pjx+vOf/6zFixdLkkJDQ7VgwQLNnz9fb7/9tkpLS3XzzTfrj3/8o26//fYqRhWoXkE13QHARuUfDg0bNjxhbUlJiSIiIuR2uyVJwcHBVdZOmTJFbdu2dWZ4/O0Pf/iDz+s5c+YoKipKK1eu1FVXXVXpe6ZOnarRo0c7oeOpp57SihUrNG3aNM2cOdM5rnLR0dE+6+Li4tS7d29Jv85cNWvWTB9//PFpH0ODBg3kdrt15MgRxcbG+sx8nc7xSb8GUbfbLWOM4uPjFR4ernr16lVau3DhQv34449au3atoqOjJUktW7astLagoECPP/64Ro8erXHjxvm01a9fXzfddJNeeeUVjRs3Tp988onq1aunpKSkCttp2LCh3G63oqKi1KhRIwUEBEj6NfDOmjVL8+bNc8b4pZdeUlZWll5++WWNHDnS2UZJSUmFn83RfXn00Ued14mJicrJydHixYt1ww03SJI6deqkxx9/XHfccYcGDBig77//XkuXLq1yTIHqxgwMcBrK/6+5SZMmJ6z1er0KDw8/Yd2ePXv07LPP6plnnqm0ffTo0c7XMBEREVqwYEGFmhdffNGn5sknn/Rpz8/P1+DBg9WqVSu5XC5FRkbqwIED2rlzZ5V937Nnj3r06OGzvkePHtq6desJj+loERERCg0N1dy5c/XGG29U2u+YmBglJyfr3XffrXI75bVhYWF69dVXNX/+/NM+vnJLly5VRESEQkJCNG7cOM2fP19hYWGV1ubl5alz585OeDmeiRMn6vLLL1fPnj0rbR8yZIhefvlllZWVac6cORo8eHCldeU/+/DwcK1Zs0YzZ86U9OvXOCUlJT4/n/r166tbt24Vfj4n+j2cOXOmunTponPOOUcRERGaM2dOhXF74IEH9Pvf/14zZszQK6+8opiYmBOOAVBdCDDAadiyZYvOOeeck/oQ27Nnj+Lj409Y99BDD+n6669Xx44dK20fOXKk8vLynOXY8yckKT093afmrrvu8mnPyMhQXl6enn/+eX366afKy8tTTEyMDh8+fML+/VZ5eXnKyclR165d9ec//7nSfq9atUoXX3yx/vSnP/l8tVJZ7YYNGzRw4EBdf/318nq9v+n4Lr/8cuXl5emLL77QxIkTdeutt+q7776rtLaqYHOs7du363/+53/01FNPVVnTvn17xcfHa9GiRVq6dKluueWWSuvKf/aff/65Lr74Yt1www0qLS09qX5Iv4aXgwcPVvl7uGjRIj344IMaNGiQPvroI+Xl5em2226rMG779u3T119/rXr16jlfIQI1hQADnIbs7Gx17979hHUHDx7U1q1b1blz5+PW5eXl6e9//7sef/zxKmsaN26sli1bOktlX1+5XC6fmmMD1urVq3XvvfeqT58+ateunUJCQvSf//ynyn1GRkYqPj5eq1evrrCdtm3bHveYjtWyZUt17dpVEyZM0EcffeSz3/J+t2vXTo8++qgOHz5c5QxPeW379u01YcIE7d692zkp+FSPr1x4eLhatmypNm3aaMSIEQoODtY///nPSmsvuOAC5eXlVTjH5FijR4/WHXfcUeXXS+XuvPNO3XXXXbrqqquqvAy//GffsWNHjR49Wnl5edqxY4datGih4OBgn59PSUmJ1q5d6/PzWbt2rQICAnxOLj7a6tWr1b17d919993q3LmzWrZsqX//+98V6m6//XZ16NBB8+fP1+jRo095Fg7wJ86BAU7BL7/8ooULF+qDDz7QzJkz5fF4nLaioiIZY+TxeHTOOedo+/btGjVqlKKiopzzE6oydepUPfDAAyc1U/NbtGrVSq+++qqSkpLk9Xo1cuTIE84ojBw5UhMmTFCLFi3UqVMnzZ07V3l5eZV+hVWZjz/+WKWlpWrRooUKCgr06KOPKiEhQY0bN3ZqSktLdejQIRUXF+vll19W/fr1df7551d6jsXPP/8sj8ej4uJizZ8/X0FBQU5IOJ3jk349Kdvj8ejIkSNatmyZCgoK1Lp160prb7rpJj355JPq16+fJk2apCZNmmjDhg2Kj493TtD+5ptvtHPnTn3zzTcn3PcNN9wgj8dT6Yxauf3798vj8ejnn3/WjBkz1LBhQ5177rkKCwvT0KFDNXLkSEVHR6tp06aaMmWKfv75Zw0aNEiStGLFCmVmZqpPnz6KjY2tdPutWrXSX//6V3344YdKTEzUq6++qrVr1yoxMdGpmTlzpnJycvTll18qISFB7733ntLT0/XZZ58d97wuoNoYACdt7ty5RtIJlx07dpgbb7zR9O7d22zatMlnG5deeqm57777nNeSjNvtNgcOHKiyplmzZua5557z2U5GRoa59tprq3yPMcZMmDDBdOzY0Xn9+eefm6SkJBMaGmpatWpllixZUum2j1ZaWmoeeeQRc+6555r69eubjh07mg8++KDSWklmxYoVPuveeOMN06ZNGxMaGmqio6NN7969zZdffunT7/JxCw4ONu3atTOLFy82xhhz3333mUsvvfS4ta+//vpvOr6MjAxnm0FBQaZly5ZmxowZVdYbY8x3331n+vfvbyIjI02DBg1MUlKSyc3NNcb8OuaSzNSpU536FStWGEnmp59+Msb8+nvkcrkq3fa1115rMjIynNfNmjVz+hcWFma6du1qsrOznfZffvnF3HPPPaZx48YmJCTE9OjRw6xZs8Zpb968ubnjjjucfZeTZN58801jjDGHDh0yAwcONC6Xy0RFRZmhQ4eaMWPGOL87W7duNWFhYWbhwoXO+3/66SeTkJBgRo0addyxAqpLgDHGnMnABNhs3rx5mjdv3nGvogkICNCOHTvUvHnzM9YvAKhrOAcGOAVhYWEnPHE3Li6uyktwAQD+wQwMAACwDjMwAADAOgQYAABgHQIMAACwDgEGAABYhwADAACsQ4ABAADWIcAAAADrEGAAAIB1/h8Dd2eO8c1NVAAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["sym_count = df['text'].map(len)\n","plt.hist(sym_count[:10000], bins=100)\n","plt.xlabel(\"Длинна отзыва в символах\")\n","plt.show()\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4588,"status":"ok","timestamp":1692425901653,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"HlJfXGjzWEay","outputId":"9cfa808b-e2cc-489a-e460-2e1570cc5429"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["word_count = df['text'].str.split(' ').map(len)\n","plt.hist(word_count[:1750], bins=100)\n","plt.xlabel(\"Длинна отзыва в словах\")\n","plt.show()\n"]},{"cell_type":"markdown","metadata":{"id":"QbfidTdOXCWO"},"source":["### Найдите 10 самых частых: слов, слов без стоп-слов, лемм, существительных.\n"]},{"cell_type":"markdown","metadata":{"id":"EjimQd6sB4hn"},"source":["Слова"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1692425901655,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"5RH5s7aFQUIj","outputId":"a3cc53f9-5bdf-4ee6-c255-b0f08038bf24"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~'"]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["from string import punctuation\n","punctuation\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":276152,"status":"ok","timestamp":1692426177795,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"fe-W7A9qcIJ7","outputId":"eb8d427c-d79f-44e4-82fc-55a81a15ab16"},"outputs":[{"name":"stderr","output_type":"stream","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n","[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n"]}],"source":["from collections import Counter\n","from nltk.tokenize import word_tokenize\n","nltk.download('punkt')\n","nltk.download('stopwords')\n","corpus = [token.lower() for t in df.text for token in word_tokenize(t) if token not in punctuation]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1692426178016,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"a9mB_8fuUFMp","outputId":"2314313c-ec03-4db3-ce75-d90da8aff008"},"outputs":[{"data":{"text/plain":["[('в', 1203537),\n"," ('и', 958251),\n"," ('не', 777362),\n"," ('на', 641133),\n"," ('что', 567323),\n"," ('я', 525928),\n"," ('с', 415270),\n"," ('по', 336082),\n"," ('мне', 294863),\n"," ('банка', 244688)]"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["freq_dict = Counter(corpus)\n","\n","freq_dict.most_common(10)"]},{"cell_type":"markdown","metadata":{"id":"E37hsiRCB8-T"},"source":["Слова без стоп слов\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1692426178016,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"},"user_tz":-180},"id":"Kl4_Qk3sCCdr","outputId":"17b4f14f-c7cb-4d5e-e5e3-519f27de3406"},"outputs":[{"name":"stderr","output_type":"stream","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n"]},{"data":{"text/plain":["True"]},"execution_count":22,"metadata":{},"output_type":"execute_result"}],"source":["nltk.download('stopwords')\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"NRClLqKmHHPY","outputId":"6d1931bd-0e0a-48e6-96ab-a0fd66089f27"},"outputs":[{"data":{"text/plain":["[('банка', 244688),\n"," ('банк', 180505),\n"," ('это', 165081),\n"," ('в', 138160),\n"," ('я', 119170),\n"," ('деньги', 118964),\n"," ('карту', 97164),\n"," ('карты', 94652),\n"," ('кредит', 72061),\n"," ('день', 69820)]"]},"execution_count":23,"metadata":{},"output_type":"execute_result"}],"source":["\n","noise = stopwords.words('russian') + list(punctuation) + ['``', \"''\", '...']\n","corpus = [token.lower() for t in df.text for token in word_tokenize(t) if token not in noise]\n","freq_dict1 = Counter(corpus)\n","\n","freq_dict1.most_common(10)"]},{"cell_type":"markdown","metadata":{"id":"U0dveXSVa6Ad"},"source":["Леммы\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"d73-n4CJa916","outputId":"71b36d52-062d-4e1c-9c71-089ceb037b8c"},"outputs":[{"name":"stdout","output_type":"stream","text":["Requirement already satisfied: pymystem3 in /usr/local/lib/python3.10/dist-packages (0.2.0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from pymystem3) (2.31.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->pymystem3) (3.2.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->pymystem3) (3.4)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->pymystem3) (2.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->pymystem3) (2023.7.22)\n"]}],"source":["!pip install pymystem3"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"RpgbM1Gcb6Q7","outputId":"51875c85-19fd-4604-bca4-aabe349d39c9"},"outputs":[{"data":{"text/plain":["[(' ', 26236921),\n"," (', ', 2903442),\n"," ('. ', 1647976),\n"," ('банк', 562713),\n"," ('карта', 311416),\n"," (' (', 230802),\n"," ('это', 212602),\n"," (' - ', 200346),\n"," ('деньги', 164107),\n"," ('день', 158757)]"]},"execution_count":25,"metadata":{},"output_type":"execute_result"}],"source":["corpus = [token.lower() for t in df.text for token in m.lemmatize(t) if token not in noise]\n","freq_dict = Counter(corpus)\n","\n","freq_dict.most_common(10)"]},{"cell_type":"markdown","metadata":{"id":"ih1DtXlzv5ed"},"source":["Существительные\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"sDF_kkzDv_AJ"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"0bqK-BJu1zDH"},"source":["### Постройте кривые Ципфа и Хипса"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"60bO445419wU","outputId":"59814ac6-350b-4ede-b16e-543825d75944"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Кривая Ципфа\n","freqs = list(freq_dict1.values())\n","freqs = sorted(freqs, reverse = True)\n","\n","fig, ax = plt.subplots()\n","ax.plot(freqs[:300], range(300))\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"fk9yH3WWBPLy","outputId":"d8b11867-12f4-4d18-e8d5-123066a5489b"},"outputs":[{"name":"stderr","output_type":"stream","text":["100%|██████████| 138325/138325 [05:14<00:00, 439.56it/s]\n"]}],"source":["# Кривая Хипса\n","\n","cnt = Counter()\n","n_words = []\n","n_tokens = []\n","tokens = []\n","for index, row in tqdm(df.iterrows(), total = len(df)):\n","    tokens = word_tokenize(row['text'])\n","    cnt.update([token for token in tokens if token not in punctuation])\n","    n_words.append(len(cnt))\n","    n_tokens.append(sum(cnt.values()))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"klc0vSidEgcl"},"outputs":[],"source":["# fig, ax = plt.subplots()\n","# ax.plot(n_tokens, n_words)\n","# plt.show()"]},{"cell_type":"markdown","metadata":{"id":"KD9SjlYEomGF"},"source":["### Ответьте на следующие вопросы:\n","какое слово встречается чаще, \"сотрудник\" или \"клиент\"?\n","сколько раз встречается слова \"мошенничество\" и \"доверие\"?"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"bJnQc4Giow9H"},"outputs":[],"source":["from nltk import FreqDist\n","Freq_Dist = FreqDist(corpus)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"0MnOiU5NhpUE","outputId":"1c115707-48e3-4fdf-b371-5bb55aa74247"},"outputs":[{"name":"stdout","output_type":"stream","text":["Слово сотрудник встрчалось чаще\n"]}],"source":["if Freq_Dist['сотрудник'] > Freq_Dist['клиент']:\n","  print('Слово сотрудник встрчалось чаще')\n","else:\n","  print('Слово клиент встречалось чаще')"]},{"cell_type":"markdown","metadata":{"id":"tJintAv9i1G1"},"source":["сколько раз встречается слова \"мошенничество\" и \"доверие\"?"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Dgl1Osywimdb","outputId":"9cfc4896-9ff4-493d-a486-1d3282e8b35d"},"outputs":[{"name":"stdout","output_type":"stream","text":["Слово \"мошенничество\" встречалось 3122 раз, а слово \"доверие\" встречалось 1938 раз\n"]}],"source":["print(f'Слово \"мошенничество\" встречалось {Freq_Dist[\"мошенничество\"]} раз, а слово \"доверие\" встречалось {Freq_Dist[\"доверие\"]} раз')"]},{"cell_type":"markdown","metadata":{"id":"LymuvN4QeVyF"},"source":["### В поле \"rating_grade\" записана оценка отзыва по шкале от 1 до 5. Используйте меру 𝑡𝑓−𝑖𝑑𝑓 , для того, чтобы найти ключевые слова и биграмы для положительных отзывов (с оценкой 5) и отрицательных отзывов (с оценкой 1)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"a8DE7x6SAe0o","executionInfo":{"status":"ok","timestamp":1692613036603,"user_tz":-180,"elapsed":11710,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"}},"outputId":"2b02205c-98ab-4bcb-b54a-a62b79af3394"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["             city  rating_not_checked  \\\n","0       г. Москва               False   \n","1  г. Новосибирск               False   \n","2       г. Москва               False   \n","3   г. Ставрополь               False   \n","4    г. Челябинск               False   \n","\n","                                               title  num_comments  \\\n","0                                             Жалоба             0   \n","1      Не могу пользоваться услугой Сбербанк он-лайн             0   \n","2                    Двойное списание за один товар.             1   \n","3  Меняют проценты комиссии  не предупредив и не ...             2   \n","4             Верните денежные средства за страховку             1   \n","\n","      bank_license       author        bank_name             datetime  \\\n","0  лицензия № 2562       uhnov1          Бинбанк  2015-06-08 12:50:54   \n","1  лицензия № 1481       Foryou  Сбербанк России  2015-06-08 11:09:57   \n","2  лицензия № 2562   Vladimir84          Бинбанк  2015-06-05 20:14:28   \n","3  лицензия № 1481       643609  Сбербанк России  2015-06-05 13:51:01   \n","4  лицензия № 2766  anfisa-2003         ОТП Банк  2015-06-05 10:58:12   \n","\n","                                                text  rating_grade  \\\n","0  Добрый день! Я не являюсь клиентом банка и пор...           NaN   \n","1  Доброго дня! Являюсь держателем зарплатной кар...           NaN   \n","2  Здравствуйте!  Дублирую свое заявление от 03.0...           NaN   \n","3  Добрый день!! Я открыл расчетный счет в СберБа...           NaN   \n","4  04.03.2015 г. взяла кредит в вашем банке, заяв...           NaN   \n","\n","                                        cleared_text  \n","0  добрый день являться клиент банк поручитель кр...  \n","1  добрый день являться держатель зарплатной карт...  \n","2  здравствовать дублировать свой заявление можай...  \n","3  добрый день открывать расчетный счет сбербанк ...  \n","4  взять кредит ваш банк заявлять я сумма рубль г...  "],"text/html":["\n","  <div id=\"df-1beafb86-4205-48c2-9a55-ff579017a889\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>city</th>\n","      <th>rating_not_checked</th>\n","      <th>title</th>\n","      <th>num_comments</th>\n","      <th>bank_license</th>\n","      <th>author</th>\n","      <th>bank_name</th>\n","      <th>datetime</th>\n","      <th>text</th>\n","      <th>rating_grade</th>\n","      <th>cleared_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>г. Москва</td>\n","      <td>False</td>\n","      <td>Жалоба</td>\n","      <td>0</td>\n","      <td>лицензия № 2562</td>\n","      <td>uhnov1</td>\n","      <td>Бинбанк</td>\n","      <td>2015-06-08 12:50:54</td>\n","      <td>Добрый день! Я не являюсь клиентом банка и пор...</td>\n","      <td>NaN</td>\n","      <td>добрый день являться клиент банк поручитель кр...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>г. Новосибирск</td>\n","      <td>False</td>\n","      <td>Не могу пользоваться услугой Сбербанк он-лайн</td>\n","      <td>0</td>\n","      <td>лицензия № 1481</td>\n","      <td>Foryou</td>\n","      <td>Сбербанк России</td>\n","      <td>2015-06-08 11:09:57</td>\n","      <td>Доброго дня! Являюсь держателем зарплатной кар...</td>\n","      <td>NaN</td>\n","      <td>добрый день являться держатель зарплатной карт...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>г. Москва</td>\n","      <td>False</td>\n","      <td>Двойное списание за один товар.</td>\n","      <td>1</td>\n","      <td>лицензия № 2562</td>\n","      <td>Vladimir84</td>\n","      <td>Бинбанк</td>\n","      <td>2015-06-05 20:14:28</td>\n","      <td>Здравствуйте!  Дублирую свое заявление от 03.0...</td>\n","      <td>NaN</td>\n","      <td>здравствовать дублировать свой заявление можай...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>г. Ставрополь</td>\n","      <td>False</td>\n","      <td>Меняют проценты комиссии  не предупредив и не ...</td>\n","      <td>2</td>\n","      <td>лицензия № 1481</td>\n","      <td>643609</td>\n","      <td>Сбербанк России</td>\n","      <td>2015-06-05 13:51:01</td>\n","      <td>Добрый день!! Я открыл расчетный счет в СберБа...</td>\n","      <td>NaN</td>\n","      <td>добрый день открывать расчетный счет сбербанк ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>г. Челябинск</td>\n","      <td>False</td>\n","      <td>Верните денежные средства за страховку</td>\n","      <td>1</td>\n","      <td>лицензия № 2766</td>\n","      <td>anfisa-2003</td>\n","      <td>ОТП Банк</td>\n","      <td>2015-06-05 10:58:12</td>\n","      <td>04.03.2015 г. взяла кредит в вашем банке, заяв...</td>\n","      <td>NaN</td>\n","      <td>взять кредит ваш банк заявлять я сумма рубль г...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1beafb86-4205-48c2-9a55-ff579017a889')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1beafb86-4205-48c2-9a55-ff579017a889 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1beafb86-4205-48c2-9a55-ff579017a889');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-afd960f4-169f-4943-abe0-2b1ef02dc038\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-afd960f4-169f-4943-abe0-2b1ef02dc038')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-afd960f4-169f-4943-abe0-2b1ef02dc038 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}],"source":["df1 = pd.read_csv('/content/drive/MyDrive/my_data.csv')\n","df1.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aHGq_7DDexEM"},"outputs":[],"source":["  text_with_rating_5 = df1['cleared_text'][df1['rating_grade']==5]\n","  text_with_rating_1 = df1['cleared_text'][df1['rating_grade']==1]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HklTuuw1iBn0"},"outputs":[],"source":["\n","\n","def get_tfidf(corpus, ngram_range):\n","  tfidf = TfidfVectorizer(analyzer='word', ngram_range=ngram_range, min_df = 0)\n","  tfidf_matrix =  tfidf.fit_transform(corpus)\n","  feature_names = tfidf.get_feature_names_out()\n","  return (tfidf_matrix.tocoo(), feature_names)\n","\n","def sort_coo(coo_matrix):\n","    tuples = zip(coo_matrix.col, coo_matrix.data)\n","    return sorted(tuples, key=lambda x: (x[1], x[0]), reverse=True)\n","\n","\n","def extract_topn_from_vector(feature_names, sorted_items, topn=10):\n","\n","    sorted_items = sorted_items[:topn]\n","\n","    score_vals = []\n","    feature_vals = []\n","\n","    for idx, score in sorted_items:\n","        fname = feature_names[idx]\n","\n","        score_vals.append(round(score, 3))\n","        feature_vals.append(feature_names[idx])\n","\n","    results= {}\n","    for idx in range(len(feature_vals)):\n","        results[feature_vals[idx]]=score_vals[idx]\n","\n","    return results\n","\n","def get_keywords(corpus, ngram_range):\n","  tfidf = get_tfidf(corpus, ngram_range)\n","  top_keywords = extract_topn_from_vector(tfidf[1], sort_coo(tfidf[0]), topn=10)\n","  return top_keywords"]},{"cell_type":"markdown","source":["Ключевые слова"],"metadata":{"id":"Pwj_syet6bdn"}},{"cell_type":"code","source":["top_keywords_rating_5 = get_keywords(text_with_rating_5.to_list(), ngram_range=(1,1))\n","top_keywords_rating_1 = get_keywords(text_with_rating_1.to_list(), ngram_range=(1,1))\n"],"metadata":{"id":"6utNhiZ41h2Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rank = pd.DataFrame({'tfidf_ranking_5': top_keywords_rating_5.keys(),'tfidf_ranking_1': top_keywords_rating_1.keys()})\n","rank"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"biKekAvm2XIg","executionInfo":{"status":"ok","timestamp":1692450490141,"user_tz":-180,"elapsed":447,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"}},"outputId":"2cb93a38-9f41-4af2-db74-7646cd6b42b0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  tfidf_ranking_5 tfidf_ranking_1\n","0           илаха             бпф\n","1        гарантия             птс\n","2              пд          версия\n","3            миля             кбк\n","4            райф         вексель\n","5             овч            балл\n","6          билайн         василий\n","7             бла             чдп\n","8             вэб            сечь\n","9        вячеслав          слиток"],"text/html":["\n","  <div id=\"df-4b1378c2-d4c3-4222-8e44-acd23bd33d16\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tfidf_ranking_5</th>\n","      <th>tfidf_ranking_1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>илаха</td>\n","      <td>бпф</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>гарантия</td>\n","      <td>птс</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>пд</td>\n","      <td>версия</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>миля</td>\n","      <td>кбк</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>райф</td>\n","      <td>вексель</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>овч</td>\n","      <td>балл</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>билайн</td>\n","      <td>василий</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>бла</td>\n","      <td>чдп</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>вэб</td>\n","      <td>сечь</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>вячеслав</td>\n","      <td>слиток</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b1378c2-d4c3-4222-8e44-acd23bd33d16')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4b1378c2-d4c3-4222-8e44-acd23bd33d16 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4b1378c2-d4c3-4222-8e44-acd23bd33d16');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4cd2b33c-de42-494a-bb5c-12fcdc9fe54f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4cd2b33c-de42-494a-bb5c-12fcdc9fe54f')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4cd2b33c-de42-494a-bb5c-12fcdc9fe54f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","source":["Биграммы"],"metadata":{"id":"e3yx3N9e6kYi"}},{"cell_type":"code","source":["top_bigramm_rating_5 = get_keywords(text_with_rating_5.to_list(), ngram_range=(2,2))\n","top_bigramm_rating_1 = get_keywords(text_with_rating_1.to_list(), ngram_range=(2,2))"],"metadata":{"id":"oOjswV0f6npe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["top_bigramm_rating_5"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nhKnTyHp77si","executionInfo":{"status":"ok","timestamp":1692450934486,"user_tz":-180,"elapsed":377,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"}},"outputId":"f36efeb2-e9ea-4383-d013-38e41a420fb2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'екатерина андреевна': 0.495,\n"," 'райф банк': 0.491,\n"," 'банковский гарантия': 0.479,\n"," 'расчетный период': 0.448,\n"," 'тинькофф банк': 0.444,\n"," 'жанна георгиевна': 0.443,\n"," 'мария александровна': 0.44,\n"," 'учетный запись': 0.432,\n"," 'ирина леонидовна': 0.421,\n"," 'наталья александровна': 0.416}"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["top_bigramm_rating_1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TBnXIBKp7si-","executionInfo":{"status":"ok","timestamp":1692450876101,"user_tz":-180,"elapsed":299,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"}},"outputId":"4e51e4c1-c943-4235-c677-f6493188e5b8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'банк бпф': 0.714,\n"," 'оао отп': 0.691,\n"," 'плата овердрафт': 0.648,\n"," 'банк рублевый': 0.644,\n"," 'ао метробанк': 0.62,\n"," 'ольга чук': 0.615,\n"," 'визит деньги': 0.585,\n"," 'детский сад': 0.576,\n"," 'рубль платежный': 0.562}"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["bigram_rank = pd.DataFrame({'tfidf_ranking_5': list(top_bigramm_rating_5.keys())[:9],'tfidf_ranking_1': list(top_bigramm_rating_1.keys())[:9]})\n","bigram_rank"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"TdK3GFix7FHg","executionInfo":{"status":"ok","timestamp":1692451119507,"user_tz":-180,"elapsed":267,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"}},"outputId":"4ff1c6eb-4555-4872-b732-77682e477b52"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       tfidf_ranking_5  tfidf_ranking_1\n","0  екатерина андреевна         банк бпф\n","1            райф банк          оао отп\n","2  банковский гарантия  плата овердрафт\n","3     расчетный период    банк рублевый\n","4        тинькофф банк     ао метробанк\n","5     жанна георгиевна        ольга чук\n","6  мария александровна     визит деньги\n","7       учетный запись      детский сад\n","8     ирина леонидовна  рубль платежный"],"text/html":["\n","  <div id=\"df-4e2bce97-0c5f-44a1-ae48-056acb6bc8b0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tfidf_ranking_5</th>\n","      <th>tfidf_ranking_1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>екатерина андреевна</td>\n","      <td>банк бпф</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>райф банк</td>\n","      <td>оао отп</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>банковский гарантия</td>\n","      <td>плата овердрафт</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>расчетный период</td>\n","      <td>банк рублевый</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>тинькофф банк</td>\n","      <td>ао метробанк</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>жанна георгиевна</td>\n","      <td>ольга чук</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>мария александровна</td>\n","      <td>визит деньги</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>учетный запись</td>\n","      <td>детский сад</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>ирина леонидовна</td>\n","      <td>рубль платежный</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e2bce97-0c5f-44a1-ae48-056acb6bc8b0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4e2bce97-0c5f-44a1-ae48-056acb6bc8b0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4e2bce97-0c5f-44a1-ae48-056acb6bc8b0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c67ba8bc-70d6-4cbe-aabe-f371459c5037\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c67ba8bc-70d6-4cbe-aabe-f371459c5037')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c67ba8bc-70d6-4cbe-aabe-f371459c5037 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":33}]},{"cell_type":"markdown","source":["## Часть 2. Тематическое моделирование"],"metadata":{"id":"CxwaqfHlsBWK"}},{"cell_type":"markdown","source":["### Постройте несколько тематических моделей коллекции документов с разным числом тем. Приведите примеры понятных (интерпретируемых) тем."],"metadata":{"id":"0QbQSDDrsOaS"}},{"cell_type":"code","source":["import gensim.corpora as corpora\n","from gensim.models import ldamodel"],"metadata":{"id":"mnEHadnIwVJO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# подготовить словарь и корпус\n","texts = [df1['cleared_text'].iloc[i].split() for i in range(len(df1))]\n","id2word = corpora.Dictionary(texts)\n","corpus = [id2word.doc2bow(text) for text in texts]\n","print(corpus[:1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_57kdtkMsAdY","executionInfo":{"status":"ok","timestamp":1692613067516,"user_tz":-180,"elapsed":29356,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"}},"outputId":"e91dd686-f234-4c49-9cb9-8df54ce12139"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[(0, 3), (1, 3), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1), (11, 2), (12, 1), (13, 1), (14, 1), (15, 3), (16, 1), (17, 2), (18, 1), (19, 1), (20, 1), (21, 1), (22, 1), (23, 4), (24, 1), (25, 1), (26, 1), (27, 1), (28, 2), (29, 1), (30, 1), (31, 1), (32, 1), (33, 1), (34, 1), (35, 2), (36, 1), (37, 1), (38, 1), (39, 1), (40, 2), (41, 1), (42, 1), (43, 1), (44, 3), (45, 1), (46, 2), (47, 1), (48, 2), (49, 1), (50, 1), (51, 1), (52, 1), (53, 1), (54, 4), (55, 1), (56, 1), (57, 1), (58, 2), (59, 2), (60, 1), (61, 1), (62, 1), (63, 1), (64, 1), (65, 1), (66, 1), (67, 1), (68, 3), (69, 2), (70, 1), (71, 1), (72, 1), (73, 1), (74, 3), (75, 1), (76, 1), (77, 1), (78, 1), (79, 1), (80, 1), (81, 1), (82, 1), (83, 1), (84, 1), (85, 1), (86, 1), (87, 1), (88, 1), (89, 1), (90, 1), (91, 1), (92, 1), (93, 1), (94, 1), (95, 1), (96, 1), (97, 1), (98, 1), (99, 1), (100, 1), (101, 1), (102, 2), (103, 1), (104, 1), (105, 1), (106, 1), (107, 1), (108, 1), (109, 1), (110, 1), (111, 1), (112, 1), (113, 2)]]\n"]}]},{"cell_type":"code","source":["def build_lda_model(corpus, id2word, num_topics):\n","  lda_model = ldamodel.LdaModel(corpus=corpus,\n","                                           id2word=id2word,\n","                                           num_topics=num_topics,\n","                                           random_state=100,\n","                                           update_every=1,\n","                                           chunksize=100,\n","                                           passes=10,\n","                                           alpha='auto',\n","                                           per_word_topics=True)\n","  return  lda_model.print_topics()\n"],"metadata":{"id":"cWwoVXzVzh2e"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 10 тем\n","from pprint import pprint\n","pprint(build_lda_model(corpus=corpus, id2word=id2word, num_topics=10))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VjRo6xjs42Jn","executionInfo":{"status":"ok","timestamp":1692618102984,"user_tz":-180,"elapsed":877221,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"}},"outputId":"e5e8250a-338b-4f67-f08d-c79236fcb565"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[(0,\n","  '0.090*\"кредит\" + 0.039*\"документ\" + 0.036*\"договор\" + 0.028*\"кредитный\" + '\n","  '0.024*\"оформлять\" + 0.023*\"заявка\" + 0.021*\"страховка\" + 0.016*\"справка\" + '\n","  '0.014*\"подписывать\" + 0.013*\"одобрять\"'),\n"," (1,\n","  '0.223*\"деньги\" + 0.076*\"банкомат\" + 0.045*\"снимать\" + 0.027*\"вернуть\" + '\n","  '0.026*\"терминал\" + 0.024*\"выдавать\" + 0.020*\"карточка\" + 0.018*\"снятие\" + '\n","  '0.018*\"переводить\" + 0.018*\"наличный\"'),\n"," (2,\n","  '0.035*\"номер\" + 0.033*\"ваш\" + 0.032*\"банк\" + 0.029*\"звонок\" + '\n","  '0.028*\"телефон\" + 0.024*\"мой\" + 0.019*\"сотрудник\" + 0.017*\"звонить\" + '\n","  '0.012*\"данные\" + 0.011*\"человек\"'),\n"," (3,\n","  '0.063*\"банк\" + 0.024*\"клиент\" + 0.014*\"очень\" + 0.013*\"свой\" + '\n","  '0.012*\"такой\" + 0.012*\"который\" + 0.010*\"другой\" + 0.009*\"обслуживание\" + '\n","  '0.009*\"время\" + 0.009*\"год\"'),\n"," (4,\n","  '0.050*\"банк\" + 0.024*\"средство\" + 0.022*\"данный\" + 0.020*\"денежный\" + '\n","  '0.019*\"мой\" + 0.018*\"октябрь\" + 0.018*\"счет\" + 0.017*\"заявление\" + '\n","  '0.013*\"договор\" + 0.012*\"обращение\"'),\n"," (5,\n","  '0.172*\"вклад\" + 0.088*\"открывать\" + 0.036*\"условие\" + 0.036*\"процент\" + '\n","  '0.034*\"открытие\" + 0.025*\"ставка\" + 0.024*\"депозит\" + 0.023*\"ткс\" + '\n","  '0.017*\"вкладчик\" + 0.015*\"сайт\"'),\n"," (6,\n","  '0.027*\"день\" + 0.022*\"банк\" + 0.020*\"сказать\" + 0.018*\"отделение\" + '\n","  '0.015*\"заявление\" + 0.014*\"приходить\" + 0.014*\"мой\" + 0.013*\"получать\" + '\n","  '0.012*\"мочь\" + 0.012*\"вопрос\"'),\n"," (7,\n","  '0.062*\"сумма\" + 0.039*\"платеж\" + 0.033*\"банк\" + 0.024*\"рубль\" + 0.024*\"год\" '\n","  '+ 0.023*\"кредит\" + 0.023*\"счет\" + 0.021*\"руб\" + 0.020*\"месяц\" + '\n","  '0.019*\"оплачивать\"'),\n"," (8,\n","  '0.200*\"карта\" + 0.043*\"сбербанк\" + 0.033*\"счет\" + 0.026*\"операция\" + '\n","  '0.019*\"перевод\" + 0.019*\"смс\" + 0.017*\"услуга\" + 0.016*\"интернет\" + '\n","  '0.014*\"поддержка\" + 0.012*\"система\"'),\n"," (9,\n","  '0.043*\"офис\" + 0.041*\"отделение\" + 0.035*\"очередь\" + 0.030*\"минута\" + '\n","  '0.022*\"работать\" + 0.021*\"сотрудник\" + 0.020*\"человек\" + 0.018*\"касса\" + '\n","  '0.017*\"час\" + 0.013*\"операционист\"')]\n"]}]},{"cell_type":"markdown","source":["1. Заключение кредитного договора.\n","2. Выдача наличных банкоматом.\n","3. Звонок в контактный центр банка.\n","4. Звонок бынка клиенту.\n","5. Открытие депозита."],"metadata":{"id":"N3BkK-BBa_X_"}},{"cell_type":"code","source":["# 15 тем\n","pprint(build_lda_model(corpus=corpus, id2word=id2word, num_topics=15))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"docLxYesSuru","executionInfo":{"status":"ok","timestamp":1692619260019,"user_tz":-180,"elapsed":1157061,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"}},"outputId":"02b78e82-04eb-4895-f3dc-1bf760092f21"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[(0,\n","  '0.251*\"сбербанк\" + 0.042*\"почта\" + 0.040*\"ответ\" + 0.038*\"письмо\" + '\n","  '0.037*\"электронный\" + 0.032*\"обращение\" + 0.031*\"россия\" + '\n","  '0.030*\"отправлять\" + 0.028*\"онлайн\" + 0.024*\"запрос\"'),\n"," (1,\n","  '0.319*\"перевод\" + 0.315*\"комиссия\" + 0.062*\"мама\" + 0.056*\"траст\" + '\n","  '0.049*\"получатель\" + 0.049*\"переводить\" + 0.016*\"бинбанк\" + 0.015*\"сбера\" + '\n","  '0.010*\"отправлять\" + 0.009*\"перевести\"'),\n"," (2,\n","  '0.051*\"банк\" + 0.040*\"мой\" + 0.036*\"номер\" + 0.034*\"ваш\" + 0.033*\"телефон\" '\n","  '+ 0.026*\"сотрудник\" + 0.026*\"звонок\" + 0.021*\"данный\" + 0.018*\"звонить\" + '\n","  '0.014*\"просить\"'),\n"," (3,\n","  '0.129*\"банк\" + 0.042*\"клиент\" + 0.020*\"очень\" + 0.017*\"свой\" + '\n","  '0.015*\"который\" + 0.012*\"такой\" + 0.011*\"банка\" + 0.011*\"другой\" + '\n","  '0.011*\"время\" + 0.011*\"год\"'),\n"," (4,\n","  '0.043*\"договор\" + 0.029*\"лицо\" + 0.024*\"рф\" + 0.022*\"право\" + 0.019*\"закон\" '\n","  '+ 0.017*\"банковский\" + 0.015*\"оао\" + 0.014*\"п\" + 0.013*\"денежный\" + '\n","  '0.012*\"средство\"'),\n"," (5,\n","  '0.258*\"кредитный\" + 0.191*\"задолженность\" + 0.098*\"история\" + '\n","  '0.055*\"русский\" + 0.051*\"стандарт\" + 0.044*\"просрочка\" + '\n","  '0.044*\"просрочивать\" + 0.023*\"закрывать\" + 0.021*\"образовываться\" + '\n","  '0.020*\"бки\"'),\n"," (6,\n","  '0.280*\"карта\" + 0.034*\"смс\" + 0.025*\"услуга\" + 0.020*\"получать\" + '\n","  '0.017*\"пользоваться\" + 0.015*\"приходить\" + 0.013*\"кредитный\" + '\n","  '0.013*\"дебетовый\" + 0.011*\"заблокировать\" + 0.011*\"подключать\"'),\n"," (7,\n","  '0.063*\"курс\" + 0.058*\"го\" + 0.053*\"статус\" + 0.049*\"доллар\" + '\n","  '0.047*\"валюта\" + 0.044*\"рядом\" + 0.041*\"зависать\" + 0.040*\"евро\" + '\n","  '0.037*\"заказ\" + 0.035*\"район\"'),\n"," (8,\n","  '0.082*\"операция\" + 0.059*\"поддержка\" + 0.055*\"терминал\" + 0.041*\"служба\" + '\n","  '0.039*\"система\" + 0.034*\"сч\" + 0.033*\"оплата\" + 0.029*\"интернет\" + '\n","  '0.027*\"магазин\" + 0.024*\"платеж\"'),\n"," (9,\n","  '0.276*\"вклад\" + 0.074*\"открывать\" + 0.066*\"касса\" + 0.039*\"кассир\" + '\n","  '0.038*\"очередь\" + 0.036*\"офис\" + 0.036*\"пополнение\" + 0.033*\"процент\" + '\n","  '0.027*\"операционист\" + 0.027*\"вкладчик\"'),\n"," (10,\n","  '0.105*\"мы\" + 0.097*\"менеджер\" + 0.067*\"втб\" + 0.055*\"квартира\" + '\n","  '0.049*\"документ\" + 0.048*\"наш\" + 0.040*\"ипотека\" + 0.037*\"сделка\" + '\n","  '0.033*\"ипотечный\" + 0.024*\"персонал\"'),\n"," (11,\n","  '0.115*\"кредит\" + 0.075*\"заявка\" + 0.042*\"договор\" + 0.037*\"страховка\" + '\n","  '0.035*\"документ\" + 0.030*\"оформлять\" + 0.029*\"справка\" + 0.028*\"кредитный\" '\n","  '+ 0.024*\"одобрять\" + 0.022*\"страхование\"'),\n"," (12,\n","  '0.025*\"отделение\" + 0.022*\"сказать\" + 0.016*\"день\" + 0.014*\"сотрудник\" + '\n","  '0.013*\"мочь\" + 0.012*\"позвонить\" + 0.012*\"приходить\" + 0.012*\"офис\" + '\n","  '0.011*\"вопрос\" + 0.010*\"время\"'),\n"," (13,\n","  '0.096*\"деньги\" + 0.067*\"счет\" + 0.051*\"заявление\" + 0.034*\"банкомат\" + '\n","  '0.031*\"средство\" + 0.030*\"день\" + 0.029*\"мой\" + 0.024*\"написать\" + '\n","  '0.020*\"снимать\" + 0.019*\"банк\"'),\n"," (14,\n","  '0.045*\"сумма\" + 0.041*\"кредит\" + 0.041*\"банк\" + 0.033*\"платеж\" + '\n","  '0.031*\"год\" + 0.028*\"месяц\" + 0.022*\"октябрь\" + 0.017*\"рубль\" + '\n","  '0.016*\"оплачивать\" + 0.015*\"процент\"')]\n"]}]},{"cell_type":"markdown","source":["1. Онлайн обращение в сбербанк.\n","2. Комиссия по переводу.\n","3. Звонок банка клиенту.\n","4. Заключение договора с банком"],"metadata":{"id":"5-JQUuJ6eFrH"}},{"cell_type":"code","source":["# 20 тем\n","pprint(build_lda_model(corpus=corpus, id2word=id2word, num_topics=20))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7HHEy20DS0er","executionInfo":{"status":"ok","timestamp":1692620692074,"user_tz":-180,"elapsed":1432063,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"}},"outputId":"74e86e38-4c69-4ed5-cb5b-8322246fff6f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[(0,\n","  '0.170*\"номер\" + 0.161*\"телефон\" + 0.115*\"звонок\" + 0.067*\"звонить\" + '\n","  '0.054*\"данные\" + 0.030*\"поступать\" + 0.028*\"смс\" + 0.018*\"база\" + '\n","  '0.017*\"указывать\" + 0.016*\"телефонный\"'),\n"," (1,\n","  '0.202*\"служба\" + 0.188*\"поддержка\" + 0.075*\"платеж\" + 0.055*\"система\" + '\n","  '0.049*\"платежный\" + 0.049*\"кошелек\" + 0.048*\"киви\" + 0.037*\"успешно\" + '\n","  '0.027*\"граница\" + 0.024*\"разблокировать\"'),\n"," (2,\n","  '0.148*\"ваш\" + 0.031*\"суд\" + 0.025*\"быть\" + 0.023*\"сотрудник\" + '\n","  '0.018*\"иметь\" + 0.018*\"человек\" + 0.017*\"являться\" + 0.016*\"мой\" + '\n","  '0.015*\"жалоба\" + 0.014*\"требовать\"'),\n"," (3,\n","  '0.025*\"такой\" + 0.023*\"просто\" + 0.023*\"который\" + 0.021*\"знать\" + '\n","  '0.021*\"говорить\" + 0.018*\"понимать\" + 0.016*\"тот\" + 0.015*\"вс\" + '\n","  '0.014*\"человек\" + 0.014*\"вообще\"'),\n"," (4,\n","  '0.310*\"вклад\" + 0.084*\"открывать\" + 0.062*\"процент\" + 0.042*\"депозит\" + '\n","  '0.036*\"ставка\" + 0.030*\"вкладчик\" + 0.027*\"условие\" + 0.023*\"пристав\" + '\n","  '0.016*\"срок\" + 0.015*\"арест\"'),\n"," (5,\n","  '0.205*\"ипотека\" + 0.148*\"исправлять\" + 0.137*\"вовремя\" + 0.125*\"многий\" + '\n","  '0.096*\"чужой\" + 0.048*\"гарантия\" + 0.042*\"обновлять\" + 0.037*\"продолжение\" '\n","  '+ 0.015*\"обновляться\" + 0.004*\"проконтролировать\"'),\n"," (6,\n","  '0.051*\"день\" + 0.034*\"сказать\" + 0.024*\"приходить\" + 0.020*\"позвонить\" + '\n","  '0.019*\"мочь\" + 0.017*\"вопрос\" + 0.017*\"деньги\" + 0.017*\"отвечать\" + '\n","  '0.016*\"почему\" + 0.013*\"мой\"'),\n"," (7,\n","  '0.390*\"карта\" + 0.033*\"смс\" + 0.026*\"услуга\" + 0.025*\"кредитный\" + '\n","  '0.022*\"лимит\" + 0.020*\"пользоваться\" + 0.018*\"дебетовый\" + '\n","  '0.016*\"заблокировать\" + 0.015*\"подключать\" + 0.014*\"получать\"'),\n"," (8,\n","  '0.122*\"счет\" + 0.112*\"деньги\" + 0.062*\"средство\" + 0.050*\"операция\" + '\n","  '0.050*\"сумма\" + 0.041*\"рубль\" + 0.032*\"перевод\" + 0.031*\"комиссия\" + '\n","  '0.030*\"денежный\" + 0.027*\"снимать\"'),\n"," (9,\n","  '0.552*\"сбербанк\" + 0.110*\"онлайн\" + 0.051*\"пароль\" + 0.050*\"россия\" + '\n","  '0.030*\"записывать\" + 0.024*\"золотой\" + 0.019*\"отделение\" + '\n","  '0.015*\"пенсионный\" + 0.014*\"буква\" + 0.012*\"запоминать\"'),\n"," (10,\n","  '0.102*\"заявка\" + 0.100*\"документ\" + 0.072*\"кредит\" + 0.036*\"менеджер\" + '\n","  '0.035*\"справка\" + 0.032*\"оформлять\" + 0.029*\"одобрять\" + 0.023*\"кредитный\" '\n","  '+ 0.021*\"подавать\" + 0.021*\"анкета\"'),\n"," (11,\n","  '0.118*\"страховка\" + 0.106*\"кредит\" + 0.071*\"страхование\" + '\n","  '0.070*\"страховой\" + 0.045*\"сумма\" + 0.040*\"договор\" + 0.027*\"компания\" + '\n","  '0.023*\"отказываться\" + 0.023*\"оформлять\" + 0.018*\"вернуть\"'),\n"," (12,\n","  '0.116*\"отделение\" + 0.058*\"офис\" + 0.032*\"очередь\" + 0.031*\"минута\" + '\n","  '0.026*\"сотрудник\" + 0.025*\"работать\" + 0.020*\"час\" + 0.018*\"касса\" + '\n","  '0.015*\"приезжать\" + 0.015*\"время\"'),\n"," (13,\n","  '0.169*\"карточка\" + 0.081*\"присылать\" + 0.048*\"реклама\" + 0.045*\"остальной\" '\n","  '+ 0.041*\"минимум\" + 0.035*\"спорный\" + 0.031*\"сюда\" + 0.027*\"нажимать\" + '\n","  '0.026*\"стандартный\" + 0.026*\"доказывать\"'),\n"," (14,\n","  '0.113*\"банк\" + 0.047*\"клиент\" + 0.023*\"очень\" + 0.023*\"свой\" + '\n","  '0.018*\"время\" + 0.017*\"год\" + 0.015*\"другой\" + 0.014*\"работа\" + '\n","  '0.012*\"банка\" + 0.011*\"проблема\"'),\n"," (15,\n","  '0.104*\"кредит\" + 0.063*\"платеж\" + 0.050*\"сумма\" + 0.042*\"кредитный\" + '\n","  '0.032*\"оплачивать\" + 0.031*\"задолженность\" + 0.028*\"год\" + 0.024*\"месяц\" + '\n","  '0.023*\"погашение\" + 0.022*\"процент\"'),\n"," (16,\n","  '0.209*\"заявление\" + 0.099*\"написать\" + 0.062*\"обращение\" + 0.055*\"ответ\" + '\n","  '0.040*\"письмо\" + 0.038*\"срок\" + 0.030*\"рассмотрение\" + 0.029*\"писать\" + '\n","  '0.026*\"почта\" + 0.025*\"копия\"'),\n"," (17,\n","  '0.329*\"банкомат\" + 0.064*\"деньги\" + 0.048*\"русский\" + 0.045*\"выдавать\" + '\n","  '0.044*\"стандарт\" + 0.042*\"вносить\" + 0.038*\"наличный\" + 0.032*\"чек\" + '\n","  '0.022*\"снимать\" + 0.021*\"принимать\"'),\n"," (18,\n","  '0.293*\"договор\" + 0.054*\"рф\" + 0.038*\"закон\" + 0.034*\"пункт\" + '\n","  '0.032*\"условие\" + 0.031*\"право\" + 0.026*\"подписывать\" + 0.025*\"управляющий\" '\n","  '+ 0.024*\"п\" + 0.022*\"ооо\"'),\n"," (19,\n","  '0.100*\"банк\" + 0.045*\"мой\" + 0.032*\"который\" + 0.031*\"сотрудник\" + '\n","  '0.030*\"данный\" + 0.016*\"обращаться\" + 0.016*\"информация\" + 0.015*\"получать\" '\n","  '+ 0.015*\"я\" + 0.012*\"ситуация\"')]\n"]}]},{"cell_type":"markdown","source":["1. Изменение номера телефона клиента в базе банка.\n","2. Служба поддержки киви кошелек.\n","4. Открытие депозита.\n","5. Исправление данных в договоре ипотечного кредитования.\n","6. Блокировка кредитной карты с каким-то кредитным лимитом."],"metadata":{"id":"ONakePDfcnT9"}},{"cell_type":"markdown","metadata":{"id":"AJ39G_RaqauR"},"source":["## Часть3. Классификация текстов"]},{"cell_type":"markdown","source":["### Составьте обучающее и тестовое множество: выберите из всего набора данных N1 отзывов с оценкой 1 и N2 отзывов с оценкой 5 (значение N1 и N2 – на ваше усмотрение). Используйте sklearn.model_selection.train_test_split для разделения множества отобранных документов на обучающее и тестовое."],"metadata":{"id":"dxb1jD8ZiA7u"}},{"cell_type":"code","source":["from sklearn.pipeline import Pipeline\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.decomposition import TruncatedSVD\n","from sklearn.metrics import classification_report\n"],"metadata":{"id":"7Svh0vqKl3hS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["n1 = df1[df1['rating_grade']==1].iloc[:3940]\n"],"metadata":{"id":"DRXKLvhFfzMl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["n2 = df1[df1['rating_grade']==5].iloc[:3940]"],"metadata":{"id":"ikQmvSl2iTmA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sum_sample = pd.concat([n1,n2])"],"metadata":{"id":"MyVh8SkWdXtt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X = sum_sample['cleared_text'].values\n","y = sum_sample['rating_grade'].values"],"metadata":{"id":"s3OoCyKljJ6g"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,  random_state=42)"],"metadata":{"id":"TsanSe5jkxiw"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Используйте любой известный вам алгоритм классификации текстов для решения задачи и получите baseline. Сравните разные варианты векторизации текста: использование только униграм, пар или троек слов или с использованием символьных n-грам."],"metadata":{"id":"aFxaV8bFmTgV"}},{"cell_type":"code","source":[],"metadata":{"id":"R5umTJNf3iml"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wx2MjOwFofZd"},"source":["Униграммы"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bUSukDrwqauS"},"outputs":[],"source":["\n","clf = Pipeline([\n","    ('tfidf', TfidfVectorizer(analyzer='word', ngram_range=(1,1), min_df = 0)),\n","    ('tm', TruncatedSVD()),\n","    ('clf', RandomForestClassifier(max_depth=4))\n","])\n"]},{"cell_type":"code","source":["clf.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":162},"id":"eVbgm4LmY5Rc","executionInfo":{"status":"ok","timestamp":1692613164549,"user_tz":-180,"elapsed":1971,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"}},"outputId":"f9123d26-8385-40d9-c018-4e1f0269bc04"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pipeline(steps=[('tfidf', TfidfVectorizer(min_df=0)), ('tm', TruncatedSVD()),\n","                ('clf', RandomForestClassifier(max_depth=4))])"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;tfidf&#x27;, TfidfVectorizer(min_df=0)), (&#x27;tm&#x27;, TruncatedSVD()),\n","                (&#x27;clf&#x27;, RandomForestClassifier(max_depth=4))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;tfidf&#x27;, TfidfVectorizer(min_df=0)), (&#x27;tm&#x27;, TruncatedSVD()),\n","                (&#x27;clf&#x27;, RandomForestClassifier(max_depth=4))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">TfidfVectorizer</label><div class=\"sk-toggleable__content\"><pre>TfidfVectorizer(min_df=0)</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">TruncatedSVD</label><div class=\"sk-toggleable__content\"><pre>TruncatedSVD()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(max_depth=4)</pre></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["clf_test = clf.predict(X_test)\n","print(classification_report(clf_test, y_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ARv4rGdSbz2B","executionInfo":{"status":"ok","timestamp":1692613164959,"user_tz":-180,"elapsed":413,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"}},"outputId":"0bd473a0-1696-42fc-e35e-70b7b75dd72b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","         1.0       0.79      0.77      0.78      1219\n","         5.0       0.76      0.78      0.77      1145\n","\n","    accuracy                           0.77      2364\n","   macro avg       0.77      0.77      0.77      2364\n","weighted avg       0.78      0.77      0.77      2364\n","\n"]}]},{"cell_type":"markdown","source":["Биграммы"],"metadata":{"id":"XGaTl1BDeadC"}},{"cell_type":"code","source":["clf_2 = Pipeline([\n","    ('tfidf', TfidfVectorizer(analyzer='word', ngram_range=(2,2), min_df = 0)),\n","    ('tm', TruncatedSVD()),\n","    ('clf', RandomForestClassifier(max_depth=4))\n","])\n","\n","clf_2.fit(X_train, y_train)\n","clf_2_test = clf_2.predict(X_test)\n","print(classification_report(clf_2_test, y_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3W-lQlatehHq","executionInfo":{"status":"ok","timestamp":1692613173341,"user_tz":-180,"elapsed":7784,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"}},"outputId":"10d09b1d-9084-4f69-c3db-f741cbdc2187"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","         1.0       0.81      0.80      0.80      1192\n","         5.0       0.80      0.81      0.80      1172\n","\n","    accuracy                           0.80      2364\n","   macro avg       0.80      0.80      0.80      2364\n","weighted avg       0.80      0.80      0.80      2364\n","\n"]}]},{"cell_type":"markdown","source":["Триграммы"],"metadata":{"id":"LzmeSkeifK4Q"}},{"cell_type":"code","source":["clf_3 = Pipeline([\n","    ('tfidf', TfidfVectorizer(analyzer='word', ngram_range=(3,3), min_df = 0)),\n","    ('tm', TruncatedSVD()),\n","    ('clf', RandomForestClassifier(max_depth=4))\n","])\n","\n","clf_3.fit(X_train, y_train)\n","clf_3_test = clf_3.predict(X_test)\n","print(classification_report(clf_3_test, y_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AyMHkj7yfPoR","executionInfo":{"status":"ok","timestamp":1692613187687,"user_tz":-180,"elapsed":13090,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"}},"outputId":"3ec9bf6e-3806-41de-becb-cef78ba6dfe9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","         1.0       0.66      0.69      0.67      1127\n","         5.0       0.70      0.67      0.69      1237\n","\n","    accuracy                           0.68      2364\n","   macro avg       0.68      0.68      0.68      2364\n","weighted avg       0.68      0.68      0.68      2364\n","\n"]}]},{"cell_type":"markdown","source":["Символьные n-граммы в диапазоне от 1(униграмм) до 3(триграмм)."],"metadata":{"id":"_2eVC9GTf-eP"}},{"cell_type":"code","source":["clf_1_3 = Pipeline([\n","    ('tfidf', TfidfVectorizer(analyzer='word', ngram_range=(1,3), min_df = 0)),\n","    ('tm', TruncatedSVD()),\n","    ('clf', RandomForestClassifier(max_depth=4))\n","])\n","\n","clf_1_3.fit(X_train, y_train)\n","clf_1_3_test = clf_1_3.fit(X_train, y_train)\n","clf_1_3_test = clf_1_3.predict(X_test)"],"metadata":{"id":"gPeVNty7gC4y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(classification_report(clf_1_3_test, y_test))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oVnpZ4OIjMAy","executionInfo":{"status":"ok","timestamp":1692613252106,"user_tz":-180,"elapsed":12,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"}},"outputId":"daa38bc7-fc4d-4af4-e7a3-725ce07093e2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","         1.0       0.78      0.82      0.80      1123\n","         5.0       0.83      0.79      0.81      1241\n","\n","    accuracy                           0.80      2364\n","   macro avg       0.80      0.80      0.80      2364\n","weighted avg       0.80      0.80      0.80      2364\n","\n"]}]},{"cell_type":"markdown","source":["Лучшие результаты показали биграммы"],"metadata":{"id":"-7h9gwjKkNHh"}},{"cell_type":"markdown","source":["### Сравните, как изменяется качество решения задачи при использовании скрытых тем в качестве признаков:\n","1-ый вариант:\n"," преобразование (sklearn.feature_extraction.text.TfidfTransformer) и сингулярное разложение (оно же – латентый семантический анализ) (sklearn.decomposition.TruncatedSVD),\n","\n","2-ой вариант: тематические модели LDA (sklearn.decomposition.LatentDirichletAllocation). Используйте accuracy и F-measure для оценки качества классификации."],"metadata":{"id":"3vksWlkZkkqg"}},{"cell_type":"code","source":["# 2-ой вариант с биграммами\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.decomposition import LatentDirichletAllocation\n","\n","clf_2_1 = Pipeline([\n","    ('vect', CountVectorizer(analyzer='char', ngram_range=(2,2))),\n","    ('lda', LatentDirichletAllocation()),\n","    ('clf', RandomForestClassifier(max_depth=4))\n","])"],"metadata":{"id":"gD_yqFzCmYf2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["clf_2_1.fit(X_train, y_train)\n","clf_2_1_test = clf_2_1.fit(X_train, y_train)\n","clf_2_1_test = clf_2_1.predict(X_test)\n","print(classification_report(clf_2_1_test, y_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RTPvQXJWm3Kl","executionInfo":{"status":"ok","timestamp":1692617030699,"user_tz":-180,"elapsed":185615,"user":{"displayName":"Дмитрий Зайцев","userId":"06325274538029807827"}},"outputId":"3b71a10b-b08c-48ef-8121-7d7ab64d3925"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","         1.0       0.85      0.78      0.81      1284\n","         5.0       0.76      0.83      0.79      1080\n","\n","    accuracy                           0.80      2364\n","   macro avg       0.80      0.81      0.80      2364\n","weighted avg       0.81      0.80      0.80      2364\n","\n"]}]},{"cell_type":"markdown","source":["Модель TFIDF + TruncatedSVD показала лучшие результаты"],"metadata":{"id":"MAaZlNOW07XY"}}],"metadata":{"colab":{"collapsed_sections":["7-OCZT4FBZpW","6kgRrKcGQmb7","QbfidTdOXCWO","0bqK-BJu1zDH","KD9SjlYEomGF","CxwaqfHlsBWK"],"provenance":[{"file_id":"1WGf-HbUsTmocSySrW5sayYQHZYHg-gQ0","timestamp":1696342521374},{"file_id":"1BnGGeH365TuX13-2MMlKsMyV3kekbutl","timestamp":1692357998704}]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.0"}},"nbformat":4,"nbformat_minor":0}